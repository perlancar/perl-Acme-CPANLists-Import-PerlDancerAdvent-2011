<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Looking back on 2011 | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2011" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2011">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="looking_back_on_2011"></a>Looking back on 2011</h1>

<p>Firstly, a big welcome to the 2011 Dancer advent calendar - last year's advent
calendar was successful and well-received, hopefully this year's will be even
better.  You can look forward to a series of posts on getting the most from
Dancer and what's happened in 2011.</p>
<p>So, let's start by taking a look back on 2011 and see what's new in the Dancer
world.</p>
<h2><a name="dancer_workshop_at_lpw2011"></a>Dancer workshop at LPW2011</h2>

<p>Andrew Solomon presented a hands-on training session at this year's London Perl
Workshop entitled "Web development for beginners with Dancer".</p>
<p>The workshop was popular and well received, with 20 registered attendees.</p>
<p>A full writeup will follow later in the calendar :)</p>
<h2><a name="dancer_ecosystem_better_than_ever"></a>Dancer ecosystem better than ever</h2>

<p>Currently, the Dancer repository on GitHub has 378 watchers and has been forked
116 times!</p>
<p>The number of individual contributors according to GitHub is 70 - great to see
such a vibrant and helpful community springing up around Dancer.  Speaking of
the community, our <a href="http://www.perldancer.org/irc">IRC channel</a> has 87 people
present at the time of writing, with many helpful volunteers providing valuable
assistance.</p>
<p>More and more Dancer-powered sites are being added to the
<a href="http://www.perldancer.org/dancefloor">Dancefloor (Websites using Dancer)</a> page.</p>
<h2><a name="many_more_plugins_to_make_life_easy"></a>Many more plugins to make life easy</h2>

<p>Many more valuable and useful plugins have been released - a search on MetaCPAN
for <a href="https://metacpan.org/search?q=Dancer%3A%3APlugin">Dancer::Plugin::</a> gives
73 results.</p>
<p>Later advent calendar posts will showcase some of the useful plugins which can
make your life easier :)</p>
<h2><a name="better_unicode_support___it_should_just_work"></a>Better Unicode support - it should Just Work</h2>

<p>Unicode support has been extended and corrected, with some helpful guidance from
Mike Whitaker (Penfold).  With <code>charset: UTF-8</code> in your application's config,
using Unicode should Just Work.  If you're using <a href="https://metacpan.org/module/Dancer::Plugin::Database">Dancer::Plugin::Database</a>,
that setting will also cause UTF-8 support in your database engine to be
automatically enabled (for MySQL, Postgres or SQLite), so unicode strings
fetched from the database should need no special handling.</p>
<h2><a name="support_for_http_patch"></a>Support for HTTP PATCH</h2>

<p>The HTTP 'PATCH' verb is defined in
<a href="http://tools.ietf.org/html/rfc5789">RFC 5789</a>, allowing clients to perform a
partial resource modification, and is slowly being adopted by RESTful APIs etc -
GitHub's V3 API being one such example.</p>
<p>Dancer now supports PATCH requests.</p>
<p>One caveat is that it won't work in standalone mode until
<a href="https://metacpan.org/module/HTTP::Server::Simple">HTTP::Server::Simple</a>
has been updated to recognise PATCH requests.  A pull request addressing this
has been submitted, but, at the time of writing, has not been merged:</p>
<p><a href="https://github.com/bestpractical/http-server-simple/pull/2">https://github.com/bestpractical/http-server-simple/pull/2</a></p>
<h2><a name="get_hooked_"></a>Get hooked!</h2>

<p>Support for hooks, both defined by Dancer itself and additional hooks registered
by your app or plugins, to make it possible to customise how Dancer behaves
easily.</p>
<h2><a name="configurable_xml_serialising"></a>Configurable XML serialising</h2>

<p>Options can now be passed to control serialisation to XML via  <a href="https://metacpan.org/module/XML::Simple">XML::Simple</a>.</p>
<h2><a name="send_file_can_send_data_from_a_scalar_and_set_filename"></a>send_file can send data from a scalar and set filename</h2>

<p>The <a href="http://p3rl.org/Dancer#send_file">send_file</a> keyword can now be used to
send data from a scalar and set the Content-Disposition header to suggest a
filename, for example:</p>
<pre class="prettyprint">send_file \$img_data, { filename =&gt; 'myimage.png' };</pre>

<h2><a name="send_file_supports_streaming"></a>send_file supports streaming</h2>

<p>The <a href="http://p3rl.org/Dancer#send_file">send_file</a> keyword now supports PSGI
streaming, with callbacks to control what happens.</p>
<h2><a name="exceptions"></a>Exceptions</h2>

<p>The exceptional Damien Krotkine has added a continuations-style exceptions system
to provide much more powerful error handling.</p>
<h2><a name="behind_proxy_setting"></a>behind_proxy setting</h2>

<p>The behind_proxy setting tells Dancer that it is deployed behind a proxy,
causing it to honour the <code>X_FORWARDED_PROTOCOL</code>, <code>X_FORWARDED_HOST</code> etc 
env vars.</p>
<p>And, of course, many more improvements and bug fixes - thanks to the awesome
community.</p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
