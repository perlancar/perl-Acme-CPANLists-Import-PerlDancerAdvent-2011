<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Alternative Dancer Templating Engines | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2011" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2011">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="alternative_dancer_templating_engines"></a>Alternative Dancer Templating Engines</h1>

<p>Dancer uses a simple model of interfacing with templating engines (based on
<a href="https://metacpan.org/module/Dancer::Template::Abstract">Dancer::Template::Abstract</a>) and makes it very easy to add support for new
engines. Thanks to this, if you're not happy with the default <code>simple</code> engine
or with <a href="http://template-toolkit.org/index.html">Template Toolkit</a>, there is now
a dozen different alternatives to choose from. Let's take a look at some of
them.</p>
<h2><a name="dancer__template__tiny"></a>Dancer::Template::Tiny</h2>

<p><a href="https://metacpan.org/module/Template::Tiny">Template::Tiny</a> is a lightweight engine which reimplements a subset of
Template Toolkit features. As the name implies, it aims to accomplish this with
as little code as possible. If you're using just the basic functionality of
Template Toolkit, you should be able to switch to Template::Tiny without any
modifications to template files (and you can easily go back at any moment).</p>
<p><a href="https://metacpan.org/module/Dancer::Template::Tiny">Dancer::Template::Tiny</a> is going to replace <a href="https://metacpan.org/module/Dancer::Template::Simple">Dancer::Template::Simple</a> as the
default templating engine in Dancer2.</p>
<p>Example template:</p>
<pre class="prettyprint">&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Tiny Example&lt;/title&gt;
    &lt;link rel="stylesheet" href="[% request.uri_base %]/css/style.css" /&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Hello, World! This is Dancer [% dancer_version %]!&lt;/h1&gt;
    &lt;p&gt;
      [% IF morning %]
        Good morning!
      [% ELSE %]
        Good afternoon!
      [% END %] 
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</pre>

<p>Route handler:</p>
<pre class="prettyprint">use DateTime;
    
get '/hello' =&gt; sub {
    template 'hello', { morning =&gt; (localtime)[2] &lt; 12, now =&gt; DateTime-&gt;now };
};</pre>

<h2><a name="dancer__template__tenjin"></a>Dancer::Template::Tenjin</h2>

<p><a href="http://www.kuwata-lab.com/tenjin/">Tenjin</a> is a very fast templating engine
with implementations for many languages -- including, of course, Perl. Its great
performance comes from the fact that it uses the underlying language's
constructs to process templates, instead of defining its own templating language
and having to parse it. Support for this engine in Dancer is provided by 
<a href="https://metacpan.org/module/Dancer::Template::Tenjin">Dancer::Template::Tenjin</a>.</p>
<p>Example template:</p>
<pre class="prettyprint">&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Tenjin Example&lt;/title&gt;
    &lt;link rel="stylesheet" href="[== $request-&gt;uri_base =]/css/style.css" /&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Hello, World! This is Dancer [= $dancer_version =]!&lt;/h1&gt;
    &lt;p&gt;
      &lt;?pl if ((localtime)[2] &lt; 12) { ?&gt;
        Good morning!
      &lt;?pl } else { ?&gt;
        Good afternoon!
      &lt;?pl } ?&gt;
    &lt;/p&gt;
    &lt;p&gt;
      Current time is: [== DateTime-&gt;now-&gt;hms =]
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</pre>

<p>Route handler:</p>
<pre class="prettyprint">use DateTime;
    
get '/hello' =&gt; sub {
    template 'hello';
};</pre>

<h2><a name="dancer__template__haml"></a>Dancer::Template::Haml</h2>

<p><a href="http://haml-lang.com/">Haml</a>, which stands for "HTML Abstraction Markup
Language", brings a fresh, different approach to templating. It aims at making
templates short, clean, and as easy to read as well-formatted source code.
<a href="https://metacpan.org/module/Dancer::Template::Haml">Dancer::Template::Haml</a> is a wrapper around <a href="https://metacpan.org/module/Text::Haml">Text::Haml</a> and lets you use
Haml templates in Dancer applications.</p>
<p>Example template:</p>
<pre class="prettyprint">%html
  %head
    %title Haml Example
    %link(rel="stylesheet" href="#{$request-&gt;uri_base}/css/style.css")
  %body
    %h1 Hello, World! This is Dancer #{$dancer_version}!
    %p
      - if ((localtime)[2] &lt; 12) {
        Good morning!
      - } else {
        Good afternoon!
      - } 
    %p Current time is: #{DateTime-&gt;now-&gt;hms}</pre>

<p>Route handler:</p>
<pre class="prettyprint">use DateTime;
    
get '/hello' =&gt; sub {
    template 'hello';
};</pre>

<h2><a name="more"></a>More</h2>

<p>There are many more interesting templating engines ready to be used with Dancer,
such as <a href="http://www.masonhq.com/">Mason</a> (provided by
<a href="https://metacpan.org/module/Dancer::Template::Mason">Dancer::Template::Mason</a>) or <a href="http://xslate.org/">Xslate</a>
(<a href="https://metacpan.org/module/Dancer::Template::Xslate">Dancer::Template::Xslate</a>). Do a <a href="http://search.cpan.org/">CPAN</a> or
<a href="https://metacpan.org/">MetaCPAN</a> search for "dancer template" to get a list of
all the available engines, and choose the one that suits you best. In the true
spirit of Perl, there's more than one way to write a template!</p>
<h1><a name="author"></a>Author</h1>

<p><a href="http://odyniec.net/">Michal Wojciechowski</a>, <code>&lt;odyniec@odyniec.net&gt;</code></p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
