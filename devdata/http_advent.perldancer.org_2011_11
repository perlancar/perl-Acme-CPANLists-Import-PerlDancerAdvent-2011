<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Dancer 2, a Roadmap | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2011" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2011">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="dancer_2__a_roadmap"></a>Dancer 2, a Roadmap</h1>

<p>OK, before we start, let's make it clear: this article won't answer the
question everyone has in mind: <i>When ???!!!??</i>.</p>
<p>But it will give a complete overview of what has been done and what remains to
be done. This should give you a good overview of where we are and will also
enlight how you can help.</p>
<h2><a name="dsl"></a>DSL</h2>

<p>Of course the very first milestone is to have a working DSL over the new core.
It has been my main target and it's almost finished.</p>
<p>All of the keywords we have in Dancer 1 are supported at the time of this
writing except <code>send_error</code> and <code>load_app</code>. All the other keywords you won't
find in Dancer 2 that exist in Dancer 1 will be deprecated (like
<code>before_template</code> or <code>load</code> for instance).</p>
<p>I plan to finish the DSL very soon (it's my top-priority for now) so I suppose
it's a matter of weekends as that's when I'm able to work on Dancer 2.</p>
<h2><a name="core_engines"></a>Core Engines</h2>

<p>We can find several <i>engines</i> in the Dancer distribution. Engines are specific
components dedicated to handle sessions, templates, loggers and serializers.</p>
<p>The lists below show engines we found in Dancer 1, those in bold are the one
ported in Dancer 2.</p>
<ul>
<li><a name="item_Logger_engines"></a><b>Logger engines</b>
<p>Capture, <b>Console</b>, Diag, <b>File</b>, Note, Null.</p>
</li>
<li><a name="item_Session_engines"></a><b>Session engines</b>
<p>Simple, <b>YAML</b>.</p>
</li>
<li><a name="item_Template_engines"></a><b>Template engines</b>
<p>Simple, <b>TemplateToolkit</b>.</p>
</li>
<li><a name="item_Serializer_engines"></a><b>Serializer engines</b>
<p><b>Dumper</b>, <b>JSON</b>, Mutable, <b>XML</b>,  <b>YAML</b>.</p>
</li>
</ul>
<p>As you can see, there is still some work to do there, but it should not take
too long as all the <code>Moo</code> roles used to build engines are ready. Also some of these
engines are really... dumb to implement!</p>
<h2><a name="plugins"></a>Plugins</h2>

<p>The support for plugins is namely the <code>Dancer::Plugin</code> module. In Dancer 2,
lots of magic happens there because a plugin in Dancer 2 is actually a DSL role
that is consumed into the core DSL (which itself is built via a default DSL
role).</p>
<p>The interesting part is that all the role composition is hidden by the
syntactic sugar of <code>Dancer::Plugin</code>, the very same syntax of Dancer 1 is
possible, but behind the scene, there are <code>Moo</code> roles consumed, it's insanely
powerful and elegant! (I can say that without sounding pretentious, because 
it's not my idea, but one of mst's ;).</p>
<p>So, in Dancer 1, we have one plugin shipped with the core, it's
<code>Dancer::Plugin::Ajax</code> which provides a handy keyword <code>ajax</code> to define ... Ajax
routes.</p>
<p>That plugin has been ported to Dancer 2 and works as expected.</p>
<h2><a name="dancer__test"></a>Dancer::Test</h2>

<p>The <code>Dancer::Test</code> module is a helper to get Dancer tests, it provides lots of
handy function to test a Dancer application. The most used one,
<code>dancer_response</code> is implemented, but all the other helpers remain to be done.</p>
<p>Also, due to design changes, Dancer::Test might not work exactly in the same
conditions as with Dancer 1. So maybe some work here to polish it a bit more.</p>
<h2><a name="ecosystem"></a>Ecosystem</h2>

<p>The last part of the job will be quite a big challenge: we'll need to test
every module on CPAN in the Dancer ecosytem with Dancer 2, see if it works and
if not, patch it and send the patch to the author.</p>
<p>This is going to be - I think - a very interesting marathon, and I think the
best way to do it will be in a hackaton dedicated to the task.</p>
<h2><a name="ok__so_____when_"></a>OK, so ... When ?</h2>

<p>Well, not for Christmas! But we can say Dancer 2 will be out in 2012, is that
precise enough? No? Well, didn't I say at the beginning that I won't answer
that <i>when</i> question?</p>
<h2><a name="author"></a>Author</h2>

<p>This article was written by Alexis Sukrieh and reviewed by David Precious, for
the Perl Dancer Advent Calendar 2011.</p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
